"use strict";(self.webpackChunknpwd_app=self.webpackChunknpwd_app||[]).push([[250],{8333:(e,n,t)=>{var r=t(4836);n.Z=void 0;var a=r(t(4938)),o=t(5893),c=(0,a.default)((0,o.jsx)("path",{d:"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z"}),"Work");n.Z=c},4121:(e,n,t)=>{t.d(n,{T:()=>c});var r=t(2950),a=t.n(r),o=t(8333),c=function(){return a().createElement(o.Z,{fontSize:"large"})}},9250:(e,n,t)=>{t.r(n),t.d(n,{externalAppConfig:()=>c,default:()=>i});var r=t(4023),a=t(4121),o=t(4274),c=function(){return{id:"services",nameLocale:"Services",color:"#fff",backgroundColor:"#333",path:"/services",icon:a.T,app:r.Z,theme:o.rS}};const i=c},4023:(e,n,t)=>{t.d(n,{Z:()=>x});var r,a,o=t(2950),c=t.n(o),i=t(5475),l=t(6235),u=t(3839),s=t.n(u),f=t(8440),d=t(4810),p=t(5974),h=t(6867),m=t(2658),v=t(4669),b=t(7405),y=t(7905),g=function(){return g=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},g.apply(this,arguments)},k=s().div(Z||(r=["\n  flex: 1;\n  padding: 1.5rem;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],a=["\n  flex: 1;\n  padding: 1.5rem;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,Z=r),(function(e){return e.isDarkMode&&"\n    background-color: #212121;\n  "})),w=function(e){var n=(0,l.useHistory)(),t=(0,o.useState)([]),r=t[0],a=t[1],i=(0,o.useState)(null),u=i[0],s=i[1],g="dark"===e.theme.palette.mode;return(0,o.useEffect)((function(){(0,b.Z)("npwd:qb-services:getPlayers").then((function(e){a(e.data)}))}),[]),(0,o.useEffect)((function(){if(r){var e=null==r?void 0:r.reduce((function(e,n){return e[n.job]||(e[n.job]=[]),e[n.job].push(n),e}),{});s(e)}}),[r]),c().createElement(d.Z,{injectFirst:!0},c().createElement(p.Z,{theme:e.theme},c().createElement(k,{isDarkMode:g},c().createElement(f.h,null,c().createElement(h.Z,{color:"primary",onClick:function(){return n.goBack()}},c().createElement(v.Z,null)),c().createElement(m.Z,{fontSize:24,color:"primary",fontWeight:"bold"},"Services")),u&&c().createElement(y.W,{isDarkMode:g,players:u}))))};const x=function(e){return c().createElement(i.NuiProvider,null,c().createElement(w,g({},e)))};var Z},4274:(e,n,t)=>{t.d(n,{rS:()=>i});var r=t(3486),a=t(6115),o=r.Z[500],c=a.Z.white,i={palette:{primary:{main:o,dark:r.Z[700],light:r.Z[300],contrastText:c},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:c},success:{main:"#2196f3",contrastText:c}}}},7905:(e,n,t)=>{t.d(n,{W:()=>h});var r=t(1508),a=t(2440),o=t(8277),c=t(8898),i=t(5266),l=t(6867),u=t(8584),s=t(2950),f=t.n(s),d=t(1145),p=t(7405),h=function(e){var n=e.players,t=e.isDarkMode,h=(0,s.useState)(null),m=h[0],v=h[1];return f().createElement(r.Z,null,Object.keys(n).map((function(e){return f().createElement(a.Z,{subheader:f().createElement(o.Z,{sx:{cursor:"pointer"},onClick:function(){v(e)}},e.toUpperCase())},f().createElement(c.Z,{in:m===e},n[e].map((function(e){return f().createElement(i.ZP,{secondaryAction:f().createElement(l.Z,{onClick:function(){return n=e.phoneNumber,void(0,p.Z)("npwd:qb-services:callPlayer",{number:n}).then((function(e){console.log(e.data)}));var n}},f().createElement(d.Z,null))},f().createElement(u.Z,{primaryTypographyProps:{color:t?"#fff":"#000",fontWeight:"bold"},primary:e.name,secondary:e.phoneNumber}))}))))})))}},8440:(e,n,t)=>{t.d(n,{h:()=>a});var r=t(3839),a=t.n(r)()("div")({width:"100%",justifyContent:"flex-start",display:"flex",alignItems:"center",gap:20,marginBottom:20})},7405:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(5181);const a=function(e,n,t){return a=this,o=void 0,i=function(){var a;return function(e,n){var t,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;c;)try{if(t=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=n.call(e,c)}catch(e){o=[6,e],r=0}finally{t=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}(this,(function(o){switch(o.label){case 0:return a={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(n)},(0,r.Id)()&&t?[2,t]:[4,fetch("https://".concat("npwd_qb_services","/").concat(e),a)];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()]}}))},new((c=void 0)||(c=Promise))((function(e,n){function t(e){try{l(i.next(e))}catch(e){n(e)}}function r(e){try{l(i.throw(e))}catch(e){n(e)}}function l(n){var a;n.done?e(n.value):(a=n.value,a instanceof c?a:new c((function(e){e(a)}))).then(t,r)}l((i=i.apply(a,o||[])).next())}));var a,o,c,i}},5181:(e,n,t)=>{t.d(n,{Id:()=>r});var r=function(){return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,